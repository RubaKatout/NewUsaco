#include<bits/stdc++.h>
/*
Created By Tornado2004
*/
using namespace std;

#define debug(x) cout << '[' << #x << " is: " << x << "] " << endl;
#define imod(a , n) (a % n + n ) % n

#define fastio ios_base::sync_with_stdio(false);cin.tie(0);
#define inF freopen("marathon.in","r",stdin );
#define outF freopen("marathon.out" , "w" , stdout ) ;
#define sor(v) sort(v.begin() , v.end());
#define print(v) for(auto f : v ) cout << f << " " ;
#define rsor(v) sort(v.rbegin() , v.rend());
#define rev(v) reverse(v.begin() , v.end());
#define scan(v)for(auto &it : v)cin >> it ;

#define ll long long
#define logar(x , y) log(x) / log(y)
#define int ll
#define pii pair<int , int >
const int N = 1e5 + 5  , K = 11 , M = N * 4 ;
const ll MOD = 998244353   , oo = 1e9 , OO = 1e18 , mod = MOD ;
const double pi = acos(-1) , eps = 1e-6 ;

//37
// (a ^ b / c ) % mod = (a ^ b ) % MOD * (c ^ (mod - 2)) % mod
// ريتني اعدم المود
int di[] = {1 , -1 , 0 , 0};
int dj[] = {0 , 0 , 1 , -1};




pair<int , int > arr[N] ;

int sum[N] ;
int segsum[M];


int dis(pii a , pii b){
    return abs(a.first - b.first ) + abs(a.second - b.second);


}

int seg[M];




int calc(int i){

     return dis(arr[i - 1] , arr[i + 1]) - dis(arr[i - 1] , arr[i]) - dis(arr[i] , arr[i + 1]);






}

void update(int p , int s , int e , int i , int v){
    if(s == e){

        seg[p] = -v;

        return ;

    }

    int md = (s + e) / 2 ;

    if(i <= md)
        update(p * 2 , s ,  md , i , v);

    else
        update(p * 2 + 1 , md + 1 , e , i , v);

    seg[p] = max(seg[p * 2] , seg[p * 2 + 1]);



}

void updates(int p , int s , int e , int i , int v){

    if(s == e){

        segsum[p] = v;

        return ;

    }

    int md = (s + e ) / 2 ;

    if(i <= md)
        updates(p * 2 , s , md , i , v);
    else updates(p * 2 + 1 , md + 1 , e , i , v );

    segsum[p] = segsum[p * 2] + segsum[p * 2 + 1];



}

int querys(int p , int s , int e , int a , int b){

    if(e < a || s > b)
        return 0 ;

    if(a <= s && b >= e)
        return segsum[p];


    int md = (s + e) / 2 ;

    return (querys(p * 2 , s , md , a , b) + querys(p * 2 + 1 , md + 1 , e , a , b));




}



int query(int p , int s , int e , int a , int b){

    if(e < a || s > b)
        return -oo ;

    if(a <= s && b >= e)
        return seg[p];


    int md = (s + e) / 2 ;

    return max(query(p * 2 , s , md , a , b) , query(p * 2 + 1 , md + 1 , e , a , b));


}

int32_t main()
{   //inF;
    inF;outF;
    fastio;

    int n , q ;
    cin >> n >> q ;

    for(int i = 0 ; i < n ; i ++)
        cin >> arr[i].first >> arr[i].second ;


    for(int i = 1 ; i < n ; i ++){
        if(i + 1 < n){
            update(1 , 0 , n , i , calc(i));

        }


        updates(1 , 0 , n , i , dis(arr[i] , arr[i - 1]));




    }





    while(q--){

        char t ;
        cin >> t ;


        if(t == 'U'){
            int i , a , b ;
            cin >> i >> a >> b ;
            i -- ;

            if(i){
                updates(1 , 0 , n , i , dis(make_pair(a , b) , arr[i - 1])) ;
            }
            if(i != n - 1){
                updates(1 , 0 , n , i + 1 , dis({a , b} , arr[i + 1]));

            }
            arr[i] = {a , b};

            if(i > 1)update(1 , 0 , n , i - 1 , calc(i - 1));
            if(i && i + 1 != n)update(1 , 0 , n , i , calc(i));
            if(i + 2 < n)update(1 , 0 , n , i + 1 , calc(i + 1));

        }
        else {
            int a , b ;
            cin >> a >> b ;
            --a , --b ;

            int sums = querys(1 , 0 , n , a + 1 , b );
           // debug(sums);
            if(a == b){

                cout << "0\n" ;
                continue ;

            }
            if(a + 1 == b){
                cout << sums << '\n' ;
                continue ;

            }
            cout << sums - query(1 , 0 , n , a + 1, b - 1) << '\n';
        }
    }




}

/*🎂🎁🎉👑
HAPPY TORNADO`S BIRTHDAY 💜💜
*/
